name: Tests

on:
  push:
    branches: [ main, thread-safety/** ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23.x']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v ./...

    - name: Run tests with race detector
      run: go test -race -v ./...

    - name: Run integration tests
      run: go test -v ./tests/integration/...

    - name: Run integration tests with race detector
      run: go test -race -v ./tests/integration/...

    - name: Run benchmark tests (dry run)
      run: go test -bench=. -benchtime=100ms -run=^$ ./tests/benchmark/...

  race-test:
    name: Race Detector (Extended)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23.x']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Run race tests with extended timeout
      run: go test -race -timeout=10m -v ./...
      env:
        GORACE: "halt_on_error=1 log_path=/tmp/race"

    - name: Upload race detector logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: race-logs
        path: /tmp/race.*
        retention-days: 7

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23.x']
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Build
      run: go build -v ./...

    - name: Test build with race detector enabled
      run: go build -race -v ./...
